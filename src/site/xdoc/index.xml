<?xml version="1.0" encoding="utf-8"?>
<document>
  <properties>
    <title>About</title>
  </properties>
  <head>
    <script src="scripts/index.js" type="text/javascript" ></script>
  </head>
  <body>
       <p>
        JUnit is a simple framework to write repeatable tests. It is an instance of the xUnit architecture for unit testing frameworks.
      </p>
      <p style="background-color: #FFFAA0; padding: 10px;">
        <strong>JUnit 4 is in maintenance mode.</strong><br/>
        At this point, only critical bugs and security issues will be fixed.<br/>
        All other issues and PRs will therefore be declined.<br/>
        For ongoing development, please check out the <a href="https://github.com/junit-team/junit-framework/">junit-framework</a> repository.
      </p>
     <div id="carousel-main">
        <div id="main-carousel" class="carousel slide">
          <div class="carousel-inner">
	          <div class="item active">
	            <div class="carousel-content" id="junit-lambda-teaser">
								<p><a href="http://junit.org/junit5/"><img src="images/junit5-banner.png" alt="JUnit 5" style="height:120px; margin-top:20px" /></a></p>
	            </div>
	            <div class="carousel-caption">
	              <p><strong><a href="http://junit.org/junit5/">JUnit 5 is released:</a></strong></p>
	              <p><a href="http://junit.org/junit5/">Explore the new release!</a></p>
	            </div>
	          </div>
            <div class="item">
              <div class="carousel-content">
              <pre class="prettyprint">
    @Test
    public void newArrayListsHaveNoElements() {
        assertThat(new ArrayList&lt;Integer&gt;().size(), is(0));
    }

    @Test
    public void sizeReturnsNumberOfElements() {
        List&lt;Object&gt; instance = new ArrayList&lt;Object&gt;();
        instance.add(new Object());
        instance.add(new Object());
        assertThat(instance.size(), is(2));
    }

              </pre>
              </div>
              <div class="carousel-caption">
                <p><strong>Annotations</strong></p>
                <p>Start by marking your tests with <code>@Test</code>.</p>
              </div>
            </div>
            <div class="item">
              <div class="carousel-content">
              <pre class="prettyprint lang-java">
    @Test
    public void lookupEmailAddresses() {
        assertThat(new CartoonCharacterEmailLookupService().getResults("looney"), allOf(
            not(empty()),
            containsInAnyOrder(
                allOf(instanceOf(Map.class), hasEntry("id", "56"), hasEntry("email", "roadrunner@fast.org")),
                allOf(instanceOf(Map.class), hasEntry("id", "76"), hasEntry("email", "wiley@acme.com"))
            )
        ));
    }



              </pre>
              </div>
              <div class="carousel-caption">
                <p><strong>Hamcrest matchers</strong></p>
                <p>Make your assertions more expressive and get better failure reports in return. </p>
              </div>
            </div>
          </div>
          <a id="main-carousel-prev" class="carousel-control left" name="main-carousel-prev" data-slide="prev">&#8249;</a>
          <a id="main-carousel-next" class="carousel-control right" name="main-carousel-next" data-slide="next">&#8250;</a>
        </div>
      </div>

      <div class="container">
      <div class="row">
        <div class="span4" id="welcome-section">
          <p><b>Welcome</b></p>
          <ul>
            <li><a href="https://github.com/junit-team/junit4/wiki/Download-and-Install">Download and install</a></li>
            <li><a href="https://github.com/junit-team/junit4/wiki/Getting-started">Getting started</a></li>
            <li>Release Notes
              <ul>
<li><a href="https://github.com/junit-team/junit4/blob/HEAD/doc/ReleaseNotes4.13.1.md">4.13.1</a></li>
<li><a href="https://github.com/junit-team/junit4/blob/HEAD/doc/ReleaseNotes4.13.md">4.13</a></li>
<li><a href="https://github.com/junit-team/junit4/blob/HEAD/doc/ReleaseNotes4.12.md">4.12</a></li>
<li><a href="https://github.com/junit-team/junit4/blob/HEAD/doc/ReleaseNotes4.11.md">4.11</a></li>
<li><a href="https://github.com/junit-team/junit4/blob/HEAD/doc/ReleaseNotes4.10.md">4.10</a></li>
<li><a href="https://github.com/junit-team/junit4/blob/HEAD/doc/ReleaseNotes4.9.1.md">4.9.1</a></li>
<li><a href="https://github.com/junit-team/junit4/blob/HEAD/doc/ReleaseNotes4.9.md">4.9</a></li>
              </ul>
            </li>
            <li><a href="https://github.com/junit-team/junit4/wiki/Maintainer-documentation">Maintainer Documentation</a></li>
            <li><a href="https://github.com/junit-team/junit4/wiki/I-want-to-help%21">I want to help!</a></li>
            <li><a href="http://stackoverflow.com/questions/tagged/junit">Latest JUnit Questions on StackOverflow</a></li>
            <li><a href="javadoc/latest/index.html">JavaDocs</a></li>
            <li><a href="./faq.html">Frequently asked questions</a></li>
            <li><a href="https://github.com/junit-team/junit4/wiki">Wiki</a></li>
            <li><a href="./license.html">License</a></li>
          </ul>
        </div>
        <div class="span4" id="concepts-section">
          <p><b>Usage and Idioms</b></p>
          <ul>
<li><a href="https://github.com/junit-team/junit4/wiki/Assertions">Assertions</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Test-runners">Test Runners</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Aggregating-tests-in-suites">Aggregating tests in Suites</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Test-execution-order">Test Execution Order</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Exception-testing">Exception Testing</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Matchers-and-assertthat">Matchers and assertThat</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Ignoring-tests">Ignoring Tests</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Timeout-for-tests">Timeout for Tests</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Parameterized-tests">Parameterized Tests</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Assumptions-with-assume">Assumptions with Assume</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Rules">Rules</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Theories">Theories</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Test-fixtures">Test Fixtures</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Categories">Categories</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Use-with-Maven">Use with Maven</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Multithreaded-code-and-concurrency">Multithreaded code and Concurrency</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Java-contract-test-helpers">Java contract test helpers</a></li>
<li><a href="https://github.com/junit-team/junit4/wiki/Continuous-testing">Continuous Testing</a></li>          </ul>
        </div>
        <div class="span4" id="thirdparty-section">
          <p><b>Third-party extensions</b></p>
          <ul>
<li><a href="https://github.com/junit-team/junit4/wiki/Custom-runners">Custom Runners</a></li>
<li>
<a href="http://site.trajano.net/commons-testing/">net.trajano.commons:commons-testing for UtilityClassTestUtil</a> per #646</li>
<li>
<a href="http://stefanbirkner.github.io/system-rules">System Rules</a> â€“ A collection of JUnit rules for testing code that uses java.lang.System.</li>
<li>
<a href="https://github.com/MichaelTamm/junit-toolbox">JUnit Toolbox</a> - Provides runners for parallel testing, a <code>PoolingWait</code> class to ease asynchronous testing, and a <code>WildcardPatternSuite</code> which allow you to specify wildcard patterns instead of explicitly listing all classes when you create a suite class.</li>
<li>
<a href="https://github.com/pholser/junit-quickcheck">junit-quickcheck</a> - QuickCheck-style parameter suppliers for JUnit theories. Uses <a href="https://github.com/junit-team/junit.contrib/tree/HEAD/theories">junit.contrib's version of the theories machinery</a>, which respects generics on theory parameters.</li>          </ul>
        </div>
      </div>
    </div>
  </body>
</document>
